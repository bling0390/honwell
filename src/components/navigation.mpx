<template>
  <view class="navigation">
    <view class="nav-header">
      <text class="logo">üè¢</text>
      <text class="company-name">Honwell</text>
    </view>
    
    <view class="nav-menu">
      <view 
        wx:for="{{menuItems}}" 
        wx:key="id"
        class="nav-item {{currentPage === item.path ? 'active' : ''}}"
        bindtap="navigateTo"
        data-path="{{item.path}}"
      >
        <text class="nav-icon">{{item.iconText}}</text>
        <text class="nav-text">{{item.name}}</text>
      </view>
    </view>
  </view>
</template>

<script lang="ts">
import { createComponent } from '@mpxjs/core'

interface MenuItem {
  id: number
  name: string
  path: string
  iconText: string
}

createComponent({
  data: {
    currentPage: '/pages/index',
    menuItems: [
      {
        id: 1,
        name: 'È¶ñÈ°µ',
        path: '/pages/index',
iconText: 'üè†'
      },
      {
        id: 2,
        name: 'ÂÖ≥‰∫éÊàë‰ª¨',
        path: '/pages/about',
iconText: '‚ÑπÔ∏è'
      },
      {
        id: 3,
        name: 'ÊúÄÊñ∞‰∫ßÂìÅ',
        path: '/pages/products',
iconText: 'üì¶'
      },
      {
        id: 4,
        name: '‰ºÅ‰∏öËµÑËÆØ',
        path: '/pages/news',
iconText: 'üì∞'
      },
      {
        id: 5,
        name: 'Â≤ó‰ΩçÊãõËÅò',
        path: '/pages/careers',
iconText: 'üë•'
      }
    ] as MenuItem[]
  },

  onShow() {
    // Ëé∑ÂèñÂΩìÂâçÈ°µÈù¢Ë∑ØÂæÑ
    const pages = getCurrentPages()
    if (pages.length > 0) {
      const currentPage = pages[pages.length - 1]
      const route = '/' + currentPage.route
      this.setData({
        currentPage: route
      })
    }
  },

  methods: {
    navigateTo(event: any) {
      const path = event.target.dataset.path
      if (path === this.data.currentPage) return

      // Â¶ÇÊûúÊòØÈ¶ñÈ°µÔºå‰ΩøÁî® reLaunch
      if (path === '/pages/index') {
        wx.reLaunch({
          url: path
        })
      } else {
        wx.navigateTo({
          url: path
        })
      }
    }
  }
})
</script>

<style lang="stylus">
.navigation
  background white
  box-shadow 0 2rpx 10rpx rgba(0, 0, 0, 0.1)
  position sticky
  top 0
  z-index 100

.nav-header
  display flex
  align-items center
  padding 20rpx 30rpx
  border-bottom 1px solid #f0f0f0

.logo
  font-size 60rpx
  margin-right 20rpx
  display block

.company-name
  font-size 36rpx
  font-weight bold
  color #333

.nav-menu
  display flex
  background #f8f9fa

.nav-item
  flex 1
  display flex
  flex-direction column
  align-items center
  padding 20rpx 0
  transition all 0.3s ease
  position relative

.nav-item:active
  background rgba(0, 122, 255, 0.1)

.nav-item.active
  color #007aff

.nav-item.active::after
  content ''
  position absolute
  bottom 0
  left 50%
  transform translateX(-50%)
  width 40rpx
  height 4rpx
  background #007aff
  border-radius 2rpx

.nav-icon
  font-size 40rpx
  margin-bottom 8rpx
  display block
  text-align center

.nav-text
  font-size 22rpx
</style>

<script type="application/json">
{
  "component": true
}
</script>